# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      spotify_user_name:
        # Spotify User Name
        description: "Spotify User Email/username"
        # Default value if no value is explicitly provided
        default: "rajdeepde77@gmail.com"
        # Input has to be provided for the workflow to run
        required: true
      spotify_user_pass:
        # Spotify User Password
        description: "Spotify User Password"
        # Default value if no value is explicitly provided
        default: ""
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "UtilRunner"
  UtilRunner:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Create .env with Github Secrets and run script
        run: |
          type nul > .env
          echo SPOTIFY_API_CLIENT_SECRET=$SPOTIFY_API_CLIENT_SECRET >> .env
          echo SPOTIFY_USER_PASS=$SPOTIFY_USER_PASS >> .env
          echo SPOTIFY_USER_EMAIL=$SPOTIFY_USER_EMAIL >> .env
          echo SPOTIFY_API_CLIENT_ID=$SPOTIFY_API_CLIENT_ID >> .env
        env:
          SPOTIFY_API_CLIENT_SECRET: ${{ secrets.SPOTIFY_API_CLIENT_SECRET }}
          SPOTIFY_USER_PASS: ${{ github.event.inputs.spotify_user_pass }}
          SPOTIFY_USER_EMAIL: ${{ github.event.inputs.spotify_user_name}}
          SPOTIFY_API_CLIENT_ID: ${{vars.SPOTIFY_API_CLIENT_ID}}
      - run: npm i
      - run: npm run build
      - run: npm run ciflow
      - name: Archive artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Important Artfacts
          path: |
            screenshots
            token.json
      - name: Download all workflow run artifacts
        if: always()
        uses: actions/download-artifact@v3
